From d721410798c64d23692a8141d6b042c3dc3fb1a7 Mon Sep 17 00:00:00 2001
From: grishche <a.grishchenko@intel.com>
Date: Tue, 6 Feb 2018 13:03:03 +0200
Subject: [PATCH] hostapd-acs-scan-mode

---
 hostapd/config_file.c |  2 ++
 hostapd/ctrl_iface.c  | 14 +++++++++++++-
 hostapd/hostapd_cli.c |  2 +-
 src/ap/ap_config.h    |  1 +
 src/ap/hostapd.c      |  2 ++
 src/ap/hostapd.h      |  1 +
 src/ap/hw_features.c  | 33 +++++++++++++++++++++++----------
 7 files changed, 43 insertions(+), 12 deletions(-)

diff --git a/hostapd/config_file.c b/hostapd/config_file.c
index 2d13ae3..dc1fd57 100644
--- a/hostapd/config_file.c
+++ b/hostapd/config_file.c
@@ -3302,6 +3302,8 @@ static int hostapd_config_fill(struct hostapd_config *conf,
 		}
 	} else if (os_strcmp(buf, "ignore_40_mhz_intolerant") == 0) {
 		conf->ignore_40_mhz_intolerant = atoi(pos);
+	} else if (os_strcmp(buf, "acs_scan_mode") == 0) {
+		conf->acs_scan_mode = atoi(pos);
 #endif /* CONFIG_IEEE80211N */
 #ifdef CONFIG_IEEE80211AC
 	} else if (os_strcmp(buf, "ieee80211ac") == 0) {
diff --git a/hostapd/ctrl_iface.c b/hostapd/ctrl_iface.c
index 7d55bc0..739448b 100644
--- a/hostapd/ctrl_iface.c
+++ b/hostapd/ctrl_iface.c
@@ -2139,6 +2139,7 @@ static int hostapd_ctrl_iface_chan_switch(struct hostapd_iface *iface,
 
 	/* ACS */
 	if (settings.freq_params.freq == 0) {
+	  iface->conf->acs_scan_mode = !!os_strstr(pos, " acs_scan_mode");
 	  if (acs_init(iface) == HOSTAPD_CHAN_ACS)
 	    return 0;
 	  else
@@ -5280,6 +5281,17 @@ int hostapd_ctrl_iface_get_vap_measurements(struct hostapd_data *hapd,
   return len;
 }
 
+int hostapd_ctrl_iface_get_radio_state (enum hostapd_iface_state state)
+{
+	switch (state) {
+	case HAPD_IFACE_ENABLED:
+		return 1;
+	case HAPD_IFACE_ACS_DONE:
+		return 2;
+	default:
+		return 0;
+	}
+}
 
 int hostapd_ctrl_iface_get_radio_info(struct hostapd_data *hapd,
   const char *cmd, char *buf, size_t buflen)
@@ -5302,7 +5314,7 @@ int hostapd_ctrl_iface_get_radio_info(struct hostapd_data *hapd,
     return len;
   len += ret;
   ret = os_snprintf(buf + len, buflen - len, "HostapdEnabled=%d\n",
-      (state == HAPD_IFACE_ENABLED) ? 1 : 0);
+      hostapd_ctrl_iface_get_radio_state(state));
   if (ret >= buflen - len || ret < 0)
     return len;
   len += ret;
diff --git a/hostapd/hostapd_cli.c b/hostapd/hostapd_cli.c
index a5fb0e5..76040c5 100644
--- a/hostapd/hostapd_cli.c
+++ b/hostapd/hostapd_cli.c
@@ -1142,7 +1142,7 @@ static int hostapd_cli_cmd_chan_switch(struct wpa_ctrl *ctrl,
 		       "usage: <cs_count> <freq> [sec_channel_offset=] "
 		       "[center_freq1=] [center_freq2=] [bandwidth=] "
 		       "[blocktx] [ht|vht] [tx_ant_mask=<> rx_ant_mask=<>] "
-		       "[switch_type=<normal/scan>]\n");
+		       "[switch_type=<normal/scan>] [acs_scan_mode]\n");
 		return -1;
 	}
 
diff --git a/src/ap/ap_config.h b/src/ap/ap_config.h
index dab19b8..1004b7b 100644
--- a/src/ap/ap_config.h
+++ b/src/ap/ap_config.h
@@ -710,6 +710,7 @@ struct hostapd_config {
 	u16 scan_activity_threshold;
 	int obss_beacon_rssi_threshold;
 	int ignore_40_mhz_intolerant;
+	int acs_scan_mode;
 	u32 vht_capab;
 	int ieee80211ac;
 	int require_vht;
diff --git a/src/ap/hostapd.c b/src/ap/hostapd.c
index 49ae1e2..a29f1cf 100644
--- a/src/ap/hostapd.c
+++ b/src/ap/hostapd.c
@@ -3028,6 +3028,8 @@ const char * hostapd_state_text(enum hostapd_iface_state s)
 		return "COUNTRY_UPDATE";
 	case HAPD_IFACE_ACS:
 		return "ACS";
+	case HAPD_IFACE_ACS_DONE:
+		return "ACS_DONE";
 	case HAPD_IFACE_HT_SCAN:
 		return "HT_SCAN";
 	case HAPD_IFACE_DFS:
diff --git a/src/ap/hostapd.h b/src/ap/hostapd.h
index c5dfea8..394724c 100644
--- a/src/ap/hostapd.h
+++ b/src/ap/hostapd.h
@@ -342,6 +342,7 @@ struct hostapd_iface {
 		HAPD_IFACE_DISABLED,
 		HAPD_IFACE_COUNTRY_UPDATE,
 		HAPD_IFACE_ACS,
+		HAPD_IFACE_ACS_DONE,
 		HAPD_IFACE_HT_SCAN,
 		HAPD_IFACE_DFS,
 		HAPD_IFACE_ENABLED
diff --git a/src/ap/hw_features.c b/src/ap/hw_features.c
index 1cfc1e2..8561ad0 100644
--- a/src/ap/hw_features.c
+++ b/src/ap/hw_features.c
@@ -1199,16 +1199,23 @@ int hostapd_acs_completed(struct hostapd_iface *iface, int err)
 			dfs_channel = 1;
 
 #ifdef CONFIG_ACS
-		wpa_msg(iface->bss[0]->msg_ctx, MSG_INFO,
-				ACS_EVENT_COMPLETED "freq=%d channel=%d"
-				" OperatingChannelBandwidt=%d ExtensionChannel=%d cf1=%d cf2=%d"
-				" dfs_chan=%d",
-				freq, iface->conf->channel,
-				get_num_width(iface->conf->vht_oper_chwidth, iface->conf->secondary_channel),
-				iface->conf->secondary_channel,
-				acs_chan_to_freq(iface->conf->vht_oper_centr_freq_seg0_idx),
-				acs_chan_to_freq(iface->conf->vht_oper_centr_freq_seg1_idx),
-				dfs_channel);
+	if (!iface->conf->acs_scan_mode) {
+			wpa_msg(iface->bss[0]->msg_ctx, MSG_INFO,
+					ACS_EVENT_COMPLETED "freq=%d channel=%d"
+					" OperatingChannelBandwidt=%d ExtensionChannel=%d cf1=%d cf2=%d"
+					" reason=%s dfs_chan=%d",
+					freq, iface->conf->channel,
+					get_num_width(iface->conf->vht_oper_chwidth, iface->conf->secondary_channel),
+					iface->conf->secondary_channel,
+					acs_chan_to_freq(iface->conf->vht_oper_centr_freq_seg0_idx),
+					acs_chan_to_freq(iface->conf->vht_oper_centr_freq_seg1_idx),
+					hostapd_channel_switch_text(HAPD_CHAN_SWITCH_OTHER),
+					dfs_channel);
+	}
+	else {
+			hostapd_set_state(iface, HAPD_IFACE_ACS_DONE);
+			wpa_msg(iface->bss[0]->msg_ctx, MSG_INFO, ACS_EVENT_COMPLETED "SCAN");
+	}
 #endif /* CONFIG_ACS */
 		break;
 	case HOSTAPD_CHAN_ACS:
@@ -1224,6 +1231,12 @@ int hostapd_acs_completed(struct hostapd_iface *iface, int err)
 		goto out;
 	}
 
+	/* After scan and ACS don't set the channel */
+	if (iface->conf->acs_scan_mode) {
+		iface->conf->acs_scan_mode = 0;
+		return 0;
+	}
+
 	ret = hostapd_check_ht_capab(iface);
 	if (ret < 0)
 		goto out;
-- 
2.10.1

