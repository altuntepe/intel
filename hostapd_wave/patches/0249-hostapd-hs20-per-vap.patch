From 6b214227242394bdd3fb280a3f44f8b70ada2152 Mon Sep 17 00:00:00 2001
From: grishche <a.grishchenko@intel.com>
Date: Tue, 6 Feb 2018 13:03:03 +0200
Subject: [PATCH] hostapd-hs20-per-vap

---
 hostapd/ctrl_iface.c  | 44 ++++++++++++++++++++++++++++++++++++++++++
 hostapd/hostapd_cli.c | 53 +++++++++++++++++++++++++++++----------------------
 2 files changed, 74 insertions(+), 23 deletions(-)

diff --git a/hostapd/ctrl_iface.c b/hostapd/ctrl_iface.c
index 739448b..612d7f0 100644
--- a/hostapd/ctrl_iface.c
+++ b/hostapd/ctrl_iface.c
@@ -658,6 +658,17 @@ static int hostapd_ctrl_iface_hs20_wnm_notif(struct hostapd_data *hapd,
 	u8 addr[ETH_ALEN];
 	const char *url;
 
+	hapd = get_bss_index(cmd, hapd->iface);
+	if (NULL == hapd) {
+		return -1;
+	}
+
+	cmd = os_strchr(cmd, ' ');
+	if (NULL == cmd) {
+		return -1;
+	}
+	cmd++;
+
 	if (hwaddr_aton(cmd, addr))
 		return -1;
 	url = cmd + 17;
@@ -684,6 +695,17 @@ static int hostapd_ctrl_iface_hs20_deauth_req(struct hostapd_data *hapd,
 	size_t url_len;
 	struct wpabuf *req;
 
+	hapd = get_bss_index(cmd, hapd->iface);
+	if (NULL == hapd) {
+		return -1;
+	}
+
+	cmd = os_strchr(cmd, ' ');
+	if (NULL == cmd) {
+		return -1;
+	}
+	cmd++;
+
 	/* <STA MAC Addr> <Code(0/1)> <Re-auth-Delay(sec)> [URL] */
 	if (hwaddr_aton(cmd, addr))
 		return -1;
@@ -760,6 +782,17 @@ static int hostapd_ctrl_iface_set_qos_map_set(struct hostapd_data *hapd,
 	const char *pos = cmd;
 	int val, ret;
 
+	hapd = get_bss_index(pos, hapd->iface);
+	if (NULL == hapd) {
+		return -1;
+	}
+
+	pos = os_strchr(pos, ' ');
+	if (NULL == pos) {
+		return -1;
+	}
+	pos++;
+
 	for (;;) {
 		if (count == sizeof(qos_map_set)) {
 			wpa_printf(MSG_ERROR, "Too many qos_map_set parameters");
@@ -807,6 +840,17 @@ static int hostapd_ctrl_iface_send_qos_map_conf(struct hostapd_data *hapd,
 	u8 qos_map_set_len = hapd->conf->qos_map_set_len;
 	int ret;
 
+	hapd = get_bss_index(cmd, hapd->iface);
+	if (NULL == hapd) {
+		return -1;
+	}
+
+	cmd = os_strchr(cmd, ' ');
+	if (NULL == cmd) {
+		return -1;
+	}
+	cmd++;
+
 	if (!qos_map_set_len) {
 		wpa_printf(MSG_INFO, "QoS Map Set is not set");
 		return -1;
diff --git a/hostapd/hostapd_cli.c b/hostapd/hostapd_cli.c
index 76040c5..e144644 100644
--- a/hostapd/hostapd_cli.c
+++ b/hostapd/hostapd_cli.c
@@ -864,14 +864,14 @@ static int hostapd_cli_cmd_set_qos_map_set(struct wpa_ctrl *ctrl,
 	char buf[200];
 	int res;
 
-	if (argc != 1) {
+	if (argc != 2) {
 		printf("Invalid 'set_qos_map_set' command - "
-		       "one argument (comma delimited QoS map set) "
-		       "is needed\n");
+		       "two arguments (BSS name and comma delimited QoS map set) "
+		       "are needed\n");
 		return -1;
 	}
 
-	res = os_snprintf(buf, sizeof(buf), "SET_QOS_MAP_SET %s", argv[0]);
+	res = os_snprintf(buf, sizeof(buf), "SET_QOS_MAP_SET %s %s", argv[0], argv[1]);
 	if (os_snprintf_error(sizeof(buf), res))
 		return -1;
 	return wpa_ctrl_command(ctrl, buf);
@@ -884,13 +884,13 @@ static int hostapd_cli_cmd_send_qos_map_conf(struct wpa_ctrl *ctrl,
 	char buf[50];
 	int res;
 
-	if (argc != 1) {
+	if (argc != 2) {
 		printf("Invalid 'send_qos_map_conf' command - "
-		       "one argument (STA addr) is needed\n");
+		       "two arguments (BSS name and STA addr) are needed\n");
 		return -1;
 	}
 
-	res = os_snprintf(buf, sizeof(buf), "SEND_QOS_MAP_CONF %s", argv[0]);
+	res = os_snprintf(buf, sizeof(buf), "SEND_QOS_MAP_CONF %s %s", argv[0], argv[1]);
 	if (os_snprintf_error(sizeof(buf), res))
 		return -1;
 	return wpa_ctrl_command(ctrl, buf);
@@ -903,14 +903,14 @@ static int hostapd_cli_cmd_hs20_wnm_notif(struct wpa_ctrl *ctrl, int argc,
 	char buf[300];
 	int res;
 
-	if (argc < 2) {
-		printf("Invalid 'hs20_wnm_notif' command - two arguments (STA "
-		       "addr and URL) are needed\n");
+	if (argc < 3) {
+		printf("Invalid 'hs20_wnm_notif' command - three arguments ("
+		       "BSS name, STA addr and URL) are needed\n");
 		return -1;
 	}
 
-	res = os_snprintf(buf, sizeof(buf), "HS20_WNM_NOTIF %s %s",
-			  argv[0], argv[1]);
+	res = os_snprintf(buf, sizeof(buf), "HS20_WNM_NOTIF %s %s %s",
+			  argv[0], argv[1], argv[2]);
 	if (os_snprintf_error(sizeof(buf), res))
 		return -1;
 	return wpa_ctrl_command(ctrl, buf);
@@ -923,19 +923,20 @@ static int hostapd_cli_cmd_hs20_deauth_req(struct wpa_ctrl *ctrl, int argc,
 	char buf[300];
 	int res;
 
-	if (argc < 3) {
-		printf("Invalid 'hs20_deauth_req' command - at least three arguments (STA addr, Code, Re-auth Delay) are needed\n");
+	if (argc < 4) {
+		printf("Invalid 'hs20_deauth_req' command - at least four arguments ("
+		       "BSS name STA addr, Code, Re-auth Delay) are needed\n");
 		return -1;
 	}
 
-	if (argc > 3)
+	if (argc > 4)
 		res = os_snprintf(buf, sizeof(buf),
-				  "HS20_DEAUTH_REQ %s %s %s %s",
-				  argv[0], argv[1], argv[2], argv[3]);
+				  "HS20_DEAUTH_REQ %s %s %s %s %s",
+				  argv[0], argv[1], argv[2], argv[3], argv[4]);
 	else
 		res = os_snprintf(buf, sizeof(buf),
-				  "HS20_DEAUTH_REQ %s %s %s",
-				  argv[0], argv[1], argv[2]);
+				  "HS20_DEAUTH_REQ %s %s %s %s",
+				  argv[0], argv[1], argv[2], argv[3]);
 	if (os_snprintf_error(sizeof(buf), res))
 		return -1;
 	return wpa_ctrl_command(ctrl, buf);
@@ -2004,12 +2005,18 @@ static const struct hostapd_cli_cmd hostapd_cli_commands[] = {
 	  "= exit hostapd_cli" },
 	{ "set", hostapd_cli_cmd_set, NULL, NULL },
 	{ "get", hostapd_cli_cmd_get, NULL, NULL },
-	{ "set_qos_map_set", hostapd_cli_cmd_set_qos_map_set, NULL, NULL },
+	{ "set_qos_map_set", hostapd_cli_cmd_set_qos_map_set, NULL,
+	  "<BSS name> <arg,arg,...> = set QoS Map set element" },
 	{ "update_wan_metrics", hostapd_cli_cmd_update_wan_metrics, NULL, NULL },
-	{ "send_qos_map_conf", hostapd_cli_cmd_send_qos_map_conf, NULL, NULL },
+	{ "send_qos_map_conf", hostapd_cli_cmd_send_qos_map_conf, NULL,
+	  "<BSS name> <addr> = send QoS Map Configure frame" },
 	{ "chan_switch", hostapd_cli_cmd_chan_switch, NULL, NULL },
-	{ "hs20_wnm_notif", hostapd_cli_cmd_hs20_wnm_notif, NULL, NULL },
-	{ "hs20_deauth_req", hostapd_cli_cmd_hs20_deauth_req, NULL, NULL },
+	{ "hs20_wnm_notif", hostapd_cli_cmd_hs20_wnm_notif, NULL,
+	  "<BSS name> <addr> <url>\n"
+	  "  = send WNM-Notification Subscription Remediation Request" },
+	{ "hs20_deauth_req", hostapd_cli_cmd_hs20_deauth_req, NULL,
+	  "<BSS name> <addr> <code (0/1)> <Re-auth-Delay(sec)> [url]\n"
+	  "  = send WNM-Notification imminent deauthentication indication" },
 	{ "vendor", hostapd_cli_cmd_vendor, NULL, NULL },
 	{ "acs_recalc", hostapd_cli_cmd_acs_recalc, NULL, NULL },
 	{ "enable", hostapd_cli_cmd_enable, NULL, NULL },
-- 
2.10.1

