From d92ba82c414118d7a55772dd454c4c75a04e2e8c Mon Sep 17 00:00:00 2001
From: grishche <a.grishchenko@intel.com>
Date: Fri, 2 Feb 2018 19:01:25 +0200
Subject: [PATCH] hostapd-add-sta-rssi

---
 src/ap/ap_drv_ops.c          |  3 ++-
 src/ap/ap_drv_ops.h          |  2 +-
 src/ap/ieee802_11.c          | 18 +++++++++++-------
 src/ap/sta_info.h            |  1 +
 src/common/ltq-vendor.h      |  2 +-
 src/drivers/driver.h         |  1 +
 src/drivers/driver_nl80211.c |  4 ++++
 7 files changed, 21 insertions(+), 10 deletions(-)

diff --git a/src/ap/ap_drv_ops.c b/src/ap/ap_drv_ops.c
index 353a9d2..0625dfa 100644
--- a/src/ap/ap_drv_ops.c
+++ b/src/ap/ap_drv_ops.c
@@ -365,7 +365,7 @@ int hostapd_sta_add(struct hostapd_data *hapd,
 		    const struct ieee80211_vht_capabilities *vht_capab,
 		    u32 flags, u8 qosinfo, u8 vht_opmode, int supp_p2p_ps,
 		    int set, struct ieee80211_mgmt *last_assoc_req,
-		    size_t last_assoc_req_len)
+		    size_t last_assoc_req_len, int ssi_signal)
 {
 	struct hostapd_sta_add_params params;
 
@@ -391,6 +391,7 @@ int hostapd_sta_add(struct hostapd_data *hapd,
 	params.set = set;
 	params.last_assoc_req = last_assoc_req;
 	params.last_assoc_req_len = last_assoc_req_len;
+	params.ssi_signal = ssi_signal;
 	return hapd->driver->sta_add(hapd->drv_priv, &params);
 }
 
diff --git a/src/ap/ap_drv_ops.h b/src/ap/ap_drv_ops.h
index 57751ec..9e8fb99 100644
--- a/src/ap/ap_drv_ops.h
+++ b/src/ap/ap_drv_ops.h
@@ -44,7 +44,7 @@ int hostapd_sta_add(struct hostapd_data *hapd,
 		    const struct ieee80211_vht_capabilities *vht_capab,
 		    u32 flags, u8 qosinfo, u8 vht_opmode, int supp_p2p_ps,
 		    int set, struct ieee80211_mgmt *last_assoc_req,
-		    size_t last_assoc_req_len);
+		    size_t last_assoc_req_len, int ssi_signal);
 int hostapd_set_privacy(struct hostapd_data *hapd, int enabled);
 int hostapd_set_generic_elem(struct hostapd_data *hapd, const u8 *elem,
 			     size_t elem_len);
diff --git a/src/ap/ieee802_11.c b/src/ap/ieee802_11.c
index 9df7e53..9b519fe 100644
--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -981,7 +981,8 @@ int auth_sae_init_committed(struct hostapd_data *hapd, struct sta_info *sta)
 
 
 static void handle_auth(struct hostapd_data *hapd,
-			const struct ieee80211_mgmt *mgmt, size_t len)
+			const struct ieee80211_mgmt *mgmt, size_t len,
+      int ssi_signal)
 {
 	u16 auth_alg, auth_transaction, status_code;
 	u16 resp = WLAN_STATUS_SUCCESS;
@@ -1249,6 +1250,7 @@ static void handle_auth(struct hostapd_data *hapd,
 	identity = NULL;
 	sta->radius_cui = radius_cui;
 	radius_cui = NULL;
+	sta->ssi_signal = ssi_signal;
 
 	sta->flags &= ~WLAN_STA_PREAUTH;
 	ieee802_1x_notify_pre_auth(sta->eapol_sm, 0);
@@ -1288,7 +1290,7 @@ static void handle_auth(struct hostapd_data *hapd,
 				WLAN_STA_AUTHORIZED);
 
 		if (hostapd_sta_add(hapd, sta->addr, 0, 0, NULL, 0, 0,
-				    NULL, NULL, sta->flags, 0, 0, 0, 0, NULL, 0)) {
+				    NULL, NULL, sta->flags, 0, 0, 0, 0, NULL, 0, 0)) {
 			hostapd_logger(hapd, sta->addr,
 				       HOSTAPD_MODULE_IEEE80211,
 				       HOSTAPD_LEVEL_NOTICE,
@@ -1918,7 +1920,7 @@ static int add_associated_sta(struct hostapd_data *hapd,
 			    sta->flags | WLAN_STA_ASSOC, sta->qosinfo,
 			    sta->vht_opmode, sta->p2p_ie ? 1 : 0,
 			    sta->added_unassoc, sta->last_assoc_req,
-			    sta->last_assoc_req_len)) {
+			    sta->last_assoc_req_len, sta->ssi_signal)) {
 		hostapd_logger(hapd, sta->addr,
 			       HOSTAPD_MODULE_IEEE80211, HOSTAPD_LEVEL_NOTICE,
 			       "Could not %s STA to kernel driver",
@@ -2104,7 +2106,7 @@ static u16 send_assoc_resp(struct hostapd_data *hapd, struct sta_info *sta,
 
 static void handle_assoc(struct hostapd_data *hapd,
 			 const struct ieee80211_mgmt *mgmt, size_t len,
-			 int reassoc)
+			 int reassoc, int ssi_signal)
 {
 	u16 capab_info, listen_interval, seq_ctrl, fc;
 	u16 resp = WLAN_STATUS_SUCCESS, reply_res;
@@ -2250,6 +2252,7 @@ static void handle_assoc(struct hostapd_data *hapd,
 	}
 
 	sta->listen_interval = listen_interval;
+	sta->ssi_signal = ssi_signal;
 
 	if (hapd->iface->current_mode->mode == HOSTAPD_MODE_IEEE80211G)
 		sta->flags |= WLAN_STA_NONERP;
@@ -2738,20 +2741,21 @@ int ieee802_11_mgmt(struct hostapd_data *hapd, const u8 *buf, size_t len,
 	if (hapd->iconf->track_sta_max_num)
 		sta_track_add(hapd->iface, mgmt->sa);
 
+	wpa_printf(MSG_INFO, "ssi_signal:%d", fi->ssi_signal);
 	switch (stype) {
 	case WLAN_FC_STYPE_AUTH:
 		wpa_printf(MSG_DEBUG, "mgmt::auth");
-		handle_auth(hapd, mgmt, len);
+		handle_auth(hapd, mgmt, len, fi->ssi_signal);
 		ret = 1;
 		break;
 	case WLAN_FC_STYPE_ASSOC_REQ:
 		wpa_printf(MSG_DEBUG, "mgmt::assoc_req");
-		handle_assoc(hapd, mgmt, len, 0);
+		handle_assoc(hapd, mgmt, len, 0, fi->ssi_signal);
 		ret = 1;
 		break;
 	case WLAN_FC_STYPE_REASSOC_REQ:
 		wpa_printf(MSG_DEBUG, "mgmt::reassoc_req");
-		handle_assoc(hapd, mgmt, len, 1);
+		handle_assoc(hapd, mgmt, len, 1, fi->ssi_signal);
 		ret = 1;
 		break;
 	case WLAN_FC_STYPE_DISASSOC:
diff --git a/src/ap/sta_info.h b/src/ap/sta_info.h
index 4503543..4a851e0 100644
--- a/src/ap/sta_info.h
+++ b/src/ap/sta_info.h
@@ -200,6 +200,7 @@ struct sta_info {
 #endif /* CONFIG_SAE */
 
 	u32 session_timeout; /* valid only if session_timeout_set == 1 */
+	u32 ssi_signal; /* dBm */
 
 	/* Last Authentication/(Re)Association Request/Action frame sequence
 	 * control */
diff --git a/src/common/ltq-vendor.h b/src/common/ltq-vendor.h
index 437368c..ef4e503 100644
--- a/src/common/ltq-vendor.h
+++ b/src/common/ltq-vendor.h
@@ -35,7 +35,7 @@ enum ltq_nl80211_vendor_subcmds {
 	LTQ_NL80211_VENDOR_SUBCMD_FREE_AID = 2,
 	LTQ_NL80211_VENDOR_SUBCMD_TX_EAPOL = 3,
 	LTQ_NL80211_VENDOR_SUBCMD_COUNTRY_CODE = 4,
-  LTQ_NL80211_VENDOR_SUBCMD_SYNC_DONE = 5,
+	LTQ_NL80211_VENDOR_SUBCMD_SYNC_DONE = 5,
 	LTQ_NL80211_VENDOR_SUBCMD_DFS_DEBUG = 6,
 };
 
diff --git a/src/drivers/driver.h b/src/drivers/driver.h
index 2c0a0c5..b9c2466 100644
--- a/src/drivers/driver.h
+++ b/src/drivers/driver.h
@@ -1468,6 +1468,7 @@ struct hostapd_sta_add_params {
 	int support_p2p_ps;
 	struct ieee80211_mgmt *last_assoc_req;
 	size_t last_assoc_req_len;
+	int ssi_signal;
 };
 
 struct mac_address {
diff --git a/src/drivers/driver_nl80211.c b/src/drivers/driver_nl80211.c
index 7b0060a..cb6bee4 100644
--- a/src/drivers/driver_nl80211.c
+++ b/src/drivers/driver_nl80211.c
@@ -3935,6 +3935,10 @@ static int wpa_driver_nl80211_sta_add(void *priv,
 			goto fail;
 	}
 	if (!params->set) {
+		/* RSSI */
+		wpa_printf(MSG_DEBUG, "  * ssi_signal=%d", params->ssi_signal);
+		nla_put_u32(msg, NL80211_ATTR_STA_RSSI, (u32)params->ssi_signal);
+
 		if (params->aid) {
 			wpa_printf(MSG_DEBUG, "  * aid=%u", params->aid);
 			if (nla_put_u16(msg, NL80211_ATTR_STA_AID, params->aid))
-- 
2.10.1

