From 9d09b0c6df57eeecbb7e9cecb613b36ca2bbaa68 Mon Sep 17 00:00:00 2001
From: Simon Dinkin <simonx.dinkin@intel.com>
Date: Tue, 13 Sep 2016 20:01:40 +0300
Subject: [PATCH] bug fixes: beacon report

in handle beacon report, wrong offset of pos pointer.
in parsing the rep_cond element, wrong offset in comma pointer.
in send beacon req, search the specified STA addr in all VAPs.
fix C++ style comments to C style comments.

Signed-off-by: Simon Dinkin <simonx.dinkin@intel.com>
---
 hostapd/ctrl_iface.c |  3 ++-
 src/ap/rrm.c         | 18 +++++++++++++-----
 2 files changed, 15 insertions(+), 6 deletions(-)

diff --git a/hostapd/ctrl_iface.c b/hostapd/ctrl_iface.c
index 42ca127..7bd762f 100644
--- a/hostapd/ctrl_iface.c
+++ b/hostapd/ctrl_iface.c
@@ -2523,7 +2523,7 @@ static int hostapd_ctrl_iface_req_beacon(struct hostapd_data *hapd, char *cmd)
 	/* optional tokens */
 	token = token + strlen(token) + 1;
 	if (token >= cmd_end) {
-		// we've reached the end of command (no optinal arguments)
+		/* we've reached the end of command (no optinal arguments) */
 		goto exit;
 	}
 
@@ -2558,6 +2558,7 @@ static int hostapd_ctrl_iface_req_beacon(struct hostapd_data *hapd, char *cmd)
 					"CTRL: REQ_BEACON - report condition is invalid");
 			return -1;
 		}
+		comma++;
 		threshold = atoi(comma);
 		if (threshold < 0 || threshold > 255) {
 			wpa_printf(MSG_ERROR,
diff --git a/src/ap/rrm.c b/src/ap/rrm.c
index 67138d8..ae83942 100644
--- a/src/ap/rrm.c
+++ b/src/ap/rrm.c
@@ -103,9 +103,10 @@ static void hostapd_handle_beacon_report(struct hostapd_data *hapd, u8 token,
 	hapd->beacon_req_active = 0;
 	eloop_cancel_timeout(hostapd_beacon_rep_timeout_handler, hapd, NULL);
 
+	pos += 3;
 	op_class = pos[0];
 	channel = pos[1];
-	//not sure if its BE or LE
+	/* not sure if its BE or LE */
 	start_time = WPA_GET_BE64(&pos[2]);
 	measurement_duration = WPA_GET_BE16(&pos[10]);
 	frame_info = pos[12];
@@ -599,7 +600,7 @@ int hostapd_send_beacon_req(struct hostapd_data *hapd, const u8 *addr,
 	struct wpabuf *buf;
 	struct sta_info *sta;
 	u8 *len;
-	int ret;
+	int ret, i;
 	const u8 wildcard_bssid[ETH_ALEN] = {
 		0xff, 0xff, 0xff, 0xff, 0xff, 0xff
 	};
@@ -607,7 +608,14 @@ int hostapd_send_beacon_req(struct hostapd_data *hapd, const u8 *addr,
 	wpa_printf(MSG_DEBUG, "Request beacon: dest addr: " MACSTR ", mode: %d",
 			MAC2STR(addr), mode);
 
-	sta = ap_get_sta(hapd, addr);
+	for (i = 0; i < hapd->iface->num_bss; i++) {
+		sta = ap_get_sta(hapd->iface->bss[i], addr);
+		if (sta) {
+			hapd = hapd->iface->bss[i];
+			break;
+		}
+	}
+
 	if (!sta || !(sta->flags & WLAN_STA_AUTHORIZED)) {
 		wpa_printf(MSG_ERROR,
 			   "Request beacon: Destination address is not connected");
@@ -676,12 +684,12 @@ int hostapd_send_beacon_req(struct hostapd_data *hapd, const u8 *addr,
 	wpabuf_put_le16(buf, measurement_duration); /* Measurement Duration */
 	wpabuf_put_u8(buf, mode); /* Measurement Mode */
 	if (!bssid) {
-		// use wildcard BSSID instead of a specific BSSID
+		/* use wildcard BSSID instead of a specific BSSID */
 		bssid = wildcard_bssid;
 	}
 	wpabuf_put_data(buf, bssid, ETH_ALEN);
 
-	// optional sub-elements should go here
+	/* optional sub-elements should go here */
 
 	if (ssid) {
 		wpabuf_put_u8(buf, 0); /* ssid sub element id */
-- 
2.10.1

